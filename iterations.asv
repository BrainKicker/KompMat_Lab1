function iterations(phi, n, startX, leftX, rightX, stepX, precision)
    arguments
        phi(1,1) {sym}
        n(1,1) {mustBeInteger}
        startX(1,1) {mustBeNumeric}
        leftX(1,1) {mustBeNumeric}
        rightX(1,1) {mustBeNumeric}
        stepX(1,1) {mustBeNumeric}
        precision(1,1) {mustBeInteger}
    end

    arrow = @(a,b) quiver(a(1), a(2), b(1)-a(1), b(2)-a(2), 0, "k");

    % clear plot and hold
    clf
    hold on
    
    X = leftX:stepX:rightX;
    
    plot(X, X)
    
    plot(X, phi(X))
    
    Xi = zeros(1, n+1); % n+1 = 1 start + n iterations
    
    % start x
    Xi(1) = startX;
    
    fprintf("X0 = %.*f\n", precision, Xi(1))

    for i = 1:n
        
        Xi(i+1) = phi(Xi(i));
    
        fprintf("X%d = %.*f, delta = %.*f\n", i, precision, Xi(i+1), precision, Xi(i+1) - Xi(i))
        
        arrow([Xi(i), Xi(i)], [Xi(i), Xi(i+1)])
        arrow([Xi(i), Xi(i+1)], [Xi(i+1), Xi(i+1)])
    end

    result = Xi(n+1);

    fprintf("result = %.*f +/- %.*f\n", precision, result, precision, abs(Xi(n+1) - Xi(n)))

    fprint()

    for i = 2:n+1
        fprintf("alpha%d = %.*f\n", i-1, precision, log(Xi(i) - result)/log(Xi(i-1) - result))
    end
end